<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
	
	<!--一个<changeSet>标签对应一个变更集，由id、name、以及changelog的文件路径组成唯一标识。
	changelog在执行的时候并不是按照id的顺序，而是按照changeSet在changelog中出现的顺序。
	LiquiBase在执行changelog时，会在数据库中插入两张表：DATABASECHANGELOG和DATABASECHANGELOGLOCK，分别记录changelog的执行日志和锁日志。
	LiquiBase在执行changelog中的changeSet时，会首先查看DATABASECHANGELOG表，如果已经执行过，则会跳过（除非changeSet的runAlways属性为true，后面会介绍），
	如果没有执行过，则执行并记录changelog日志；changelog中的一个changeSet对应一个事务，在changeSet执行完后commit，如果出现错误则rollback；
	<changeSet>标签的主要属性有：
	runAlways：即使已经执行过，仍然每次都执行；注意: 由于DATABASECHANGELOG表中还记录了changeSet的MD5校验值MD5SUM，
	如果changeSet的id和name没变，而内容变了，则由于MD5值变了，即使runAlways的值为True，执行也是失败的，会报错。这种情况应该使用runOnChange属性。
	runOnChange：第一次的时候执行以及当changeSet的内容发生变化时执行。不受MD5校验值的约束。
	runInTransaction：是否作为一个事务执行，默认为true。设置为false时需要小心：如果执行过程中出错了则不会rollback，数据库很可能处于不一致的状态；
	<changeSet>下有一个重要的子标签<rollback>，即定义回滚的SQL语句。对于create table, rename column和add column等，LiquiBase会自动生成对应的rollback语句，而对于drop table、insert data等则需要显示定义rollback语句。-->
	
	<!--以上来自  https://www.cnblogs.com/alighie/p/8242800.html-->
	
	<changeSet id="CREATE_TABLE_MYSQL_LOG_SOAP" dbms="mysql" author="FERRY">
		<preConditions onFail="CONTINUE" onError="CONTINUE">
			<not>
				<tableExists tableName="LOG_SOAP"/>
			</not>
		</preConditions>
		<createTable tableName="LOG_SOAP" remarks="soap接口日志记录表">
			<column name="LOG_ID" type="BIGINT" autoIncrement="true" remarks="PK">
				<constraints nullable="false" primaryKey="true" primaryKeyName="LOG_SOAP_PK_LI"/>
			</column>
			<column name="SERVICE_ADDRESS" type="VARCHAR(200)" remarks="服务地址">
				<constraints nullable="false"/>
			</column>
			<column name="OPERATION_NAME" type="VARCHAR(200)" remarks="操作名称">
				<constraints nullable="false"/>
			</column>
			<column name="CLIENT_ADDRESS" type="VARCHAR(200)" remarks="客户端地址"/>
			<column name="PROTOCOL_HEADERS" type="VARCHAR(1000)" remarks="协议头"/>
			<column name="CONTENT_TYPE" type="VARCHAR(100)" remarks="媒体类型"/>
			<column name="INPUT_CONTENT" type="LONGTEXT" remarks="流入内容"/>
			<column name="OUTPUT_CONTENT" type="LONGTEXT" remarks="流出内容"/>
			<column name="CREATED_BY" type="BIGINT" defaultValue="${create_by_default_value}" remarks="创建人"/>
			<column name="CREATION_DATE" type="DATETIME" defaultValueDate="${now}" remarks="创建时间"/>
			<column name="LAST_UPDATED_BY" type="BIGINT" defaultValue="${last_updated_by_default_value}"
					remarks="最后更新人"/>
			<column name="LAST_UPDATE_DATE" type="DATETIME" defaultValueDate="${now}" remarks="最后更新时间"/>
		</createTable>
	</changeSet>
	
	<changeSet id="CREATE_TABLE_ORACLE_LOG_SOAP" dbms="oracle" author="FERRY">
		<preConditions onFail="CONTINUE" onError="CONTINUE">
			<not>
				<tableExists tableName="LOG_SOAP"/>
			</not>
		</preConditions>
		<createTable tableName="LOG_SOAP" remarks="soap接口日志记录表">
			<column name="LOG_ID" type="BIGINT" remarks="PK">
				<constraints nullable="false" primaryKey="true" primaryKeyName="LOG_SOAP_PK_LI"/>
			</column>
			<column name="SERVICE_ADDRESS" type="VARCHAR2(200)" remarks="服务地址">
				<constraints nullable="false"/>
			</column>
			<column name="OPERATION_NAME" type="VARCHAR2(200)" remarks="操作名称">
				<constraints nullable="false"/>
			</column>
			<column name="CLIENT_ADDRESS" type="VARCHAR2(200)" remarks="客户端地址"/>
			<column name="PROTOCOL_HEADERS" type="VARCHAR2(1000)" remarks="协议头"/>
			<column name="CONTENT_TYPE" type="VARCHAR2(100)" remarks="媒体类型"/>
			<column name="INPUT_CONTENT" type="CLOB" remarks="流入内容"/>
			<column name="OUTPUT_CONTENT" type="CLOB" remarks="流出内容"/>
			<column name="CREATED_BY" type="BIGINT" defaultValue="${create_by_default_value}" remarks="创建人"/>
			<column name="CREATION_DATE" type="DATE" defaultValueDate="${now}" remarks="创建时间"/>
			<column name="LAST_UPDATED_BY" type="BIGINT" defaultValue="${last_updated_by_default_value}"
					remarks="最后更新人"/>
			<column name="LAST_UPDATE_DATE" type="DATE" defaultValueDate="${now}" remarks="最后更新时间"/>
		</createTable>
	</changeSet>
	
	<changeSet id="CREATE_SEQUENCE_ORACLE_LOG_SOAP" dbms="oracle" author="FERRY">
		<preConditions onFail="CONTINUE" onError="CONTINUE">
			<not>
				<sequenceExists sequenceName="LOG_SOAP_S"/>
			</not>
		</preConditions>
		<createSequence sequenceName="LOG_SOAP_S"/>
	</changeSet>
	
	<changeSet id="CREATE_LOG_SOAP_INDEX" author="FERRY">
		<createIndex tableName="LOG_SOAP" indexName="LOG_SOAP_IK_ON">
			<column name="OPERATION_NAME"/>
		</createIndex>
	</changeSet>
</databaseChangeLog>
