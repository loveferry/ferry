<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>ferry</artifactId>
		<groupId>cn.org.ferry</groupId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>core-db</artifactId>
	
	<properties>
		<start-class>cn.org.ferry.CoreDbApplication</start-class>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
	</dependencies>
	
	<build>
		<finalName>ferry_db</finalName>
		<directory>target</directory>
		
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--在plugins里添加如下配置，允许在springboot使用${}获取maven变量值-->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>utf-8</encoding>
					<useDefaultDelimiters>true</useDefaultDelimiters>
				</configuration>
			</plugin>
			
			<!--maven 命令行方式启动-->
			<!--mvn clean compile -pl core-db exec:java -Dexec.mainClass="cn.org.ferry.CoreDbApplication" -Dspring.datasource.url=jdbc:mysql://127.0.0.1:3306/ferry -Dspring.datasource.username=ferry -Dspring.datasource.password=ferry-->
			<!--mvn clean compile -pl core-db org.codehaus.mojo:exec-maven-plugin:java -Dexec.mainClass="cn.org.ferry.CoreDbApplication" -Dspring.datasource.url=jdbc:mysql://127.0.0.1:3306/ferry -Dspring.datasource.username=ferry -Dspring.datasource.password=ferry-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>build-datasource</id>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>${start-class}</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application.yml</include>
					<!--这里不包含 sys 目录，则编译时不会生成该目录下的文件-->
					<include>sys/**</include>
				</includes>
			</resource>
		</resources>
	</build>
</project>
