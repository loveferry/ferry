<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
	
	<!--一个<changeSet>标签对应一个变更集，由id、name、以及changelog的文件路径组成唯一标识。
	changelog在执行的时候并不是按照id的顺序，而是按照changeSet在changelog中出现的顺序。
	LiquiBase在执行changelog时，会在数据库中插入两张表：DATABASECHANGELOG和DATABASECHANGELOGLOCK，分别记录changelog的执行日志和锁日志。
	LiquiBase在执行changelog中的changeSet时，会首先查看DATABASECHANGELOG表，如果已经执行过，则会跳过（除非changeSet的runAlways属性为true，后面会介绍），
	如果没有执行过，则执行并记录changelog日志；changelog中的一个changeSet对应一个事务，在changeSet执行完后commit，如果出现错误则rollback；
	<changeSet>标签的主要属性有：
	runAlways：即使已经执行过，仍然每次都执行；注意: 由于DATABASECHANGELOG表中还记录了changeSet的MD5校验值MD5SUM，
	如果changeSet的id和name没变，而内容变了，则由于MD5值变了，即使runAlways的值为True，执行也是失败的，会报错。这种情况应该使用runOnChange属性。
	runOnChange：第一次的时候执行以及当changeSet的内容发生变化时执行。不受MD5校验值的约束。
	runInTransaction：是否作为一个事务执行，默认为true。设置为false时需要小心：如果执行过程中出错了则不会rollback，数据库很可能处于不一致的状态；
	<changeSet>下有一个重要的子标签<rollback>，即定义回滚的SQL语句。对于create table, rename column和add column等，LiquiBase会自动生成对应的rollback语句，而对于drop table、insert data等则需要显示定义rollback语句。-->
	
	<!--以上来自  https://www.cnblogs.com/alighie/p/8242800.html-->
	
	<!--mysql数据初始化脚本文件-->
	
	
	<!--初始化文档模版数据-->
	<changeSet id="MYSQL_INIT_DOC_TEMPLATE" dbms="mysql" author="FERRY">
		<insert tableName="DOC_TEMPLATE">
			<column name="TEMPLATE_CODE" value="FERRY"/>
			<column name="TEMPLATE_NAME" value="参数替换样例"/>
			<column name="DESCRIPTION" value="文档书签替换的demo，实现将文档的关键信息定义为书签，通过系统取值完成替换书签的功能，将模版文档替换并生成有效文档。"/>
		</insert>
	</changeSet>
	
	<!--初始化文档模版参数表数据-->
	<changeSet id="MYSQL_INIT_DOC_TEMPLATE_PARAM" dbms="mysql" author="FERRY">
		<insert tableName="DOC_TEMPLATE_PARAM">
			<column name="TEMPLATE_CODE" value="FERRY"/>
			<column name="PARAM_TYPE" value="TEXT"/>
			<column name="PARAM_NAME" value="姓名"/>
			<column name="BOOK_MARK" value="姓名"/>
			<column name="SQL_CODE" value="USER_NAME_ZH"/>
		</insert>
		<insert tableName="DOC_TEMPLATE_PARAM">
			<column name="TEMPLATE_CODE" value="FERRY"/>
			<column name="PARAM_TYPE" value="TEXT"/>
			<column name="PARAM_NAME" value="电话"/>
			<column name="BOOK_MARK" value="电话"/>
			<column name="SQL_CODE" value="USER_PHONE"/>
		</insert>
		<insert tableName="DOC_TEMPLATE_PARAM">
			<column name="TEMPLATE_CODE" value="FERRY"/>
			<column name="PARAM_TYPE" value="TEXT"/>
			<column name="PARAM_NAME" value="邮箱"/>
			<column name="BOOK_MARK" value="邮箱"/>
			<column name="SQL_CODE" value="USER_EMAIL"/>
		</insert>
		<insert tableName="DOC_TEMPLATE_PARAM">
			<column name="TEMPLATE_CODE" value="FERRY"/>
			<column name="PARAM_TYPE" value="TEXT"/>
			<column name="PARAM_NAME" value="生日"/>
			<column name="BOOK_MARK" value="生日"/>
			<column name="SQL_CODE" value="FERRY_BIRTHDAY"/>
		</insert>
		<insert tableName="DOC_TEMPLATE_PARAM">
			<column name="TEMPLATE_CODE" value="FERRY"/>
			<column name="PARAM_TYPE" value="IMAGE"/>
			<column name="PARAM_NAME" value="头像"/>
			<column name="BOOK_MARK" value="头像"/>
			<column name="SQL_CODE" value="FERRY_IMAGE"/>
		</insert>
		<insert tableName="DOC_TEMPLATE_PARAM">
			<column name="TEMPLATE_CODE" value="FERRY"/>
			<column name="PARAM_TYPE" value="LIST"/>
			<column name="PARAM_NAME" value="文件列表"/>
			<column name="BOOK_MARK" value="文件列表"/>
			<column name="SQL_CODE" value="FILE_LIST"/>
		</insert>
	</changeSet>
	
</databaseChangeLog>
